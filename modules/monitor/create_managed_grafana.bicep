// SET MODULE DATE
param module_metadata object = {
  module_last_updated: '2023-11-21'
  owner: 'miztiik@github'
}

param deploymentParams object
param tags object

param uami_name_akane string

param logAnalyticsPayGWorkspaceName string
param logAnalyticsPayGWorkspaceId string

@description('Get function existing User-Assigned Managed Identity')
resource r_uami_akane 'Microsoft.ManagedIdentity/userAssignedIdentities@2023-01-31' existing = {
  name: uami_name_akane
}

// Create Azure Monitor Workspace - To be used in Grafana
resource r_azure_monitor_workspace 'Microsoft.Monitor/accounts@2021-06-03-preview' = {
  name: logAnalyticsPayGWorkspaceName
  location: deploymentParams.location
  properties: {}
}

var managed_grafana_name = replace('${deploymentParams.enterprise_name_suffix}-${deploymentParams.loc_short_code}-gf-${deploymentParams.global_uniqueness}', '_', '-')

resource r_mgd_grafana 'Microsoft.Dashboard/grafana@2022-08-01' = {
  name: managed_grafana_name
  location: deploymentParams.location
  tags: tags
  identity: {
    type: 'SystemAssigned,UserAssigned'
    userAssignedIdentities: {
      '${r_uami_akane.id}': {}
    }
  }
  sku: {
    name: 'Standard'
  }
  properties: {
    zoneRedundancy: 'Enabled'
    apiKey: 'Disabled'
    deterministicOutboundIP: 'Enabled'
    publicNetworkAccess: 'Enabled'
    autoGeneratedDomainNameLabelScope: 'TenantReuse'
    grafanaIntegrations: {
      azureMonitorWorkspaceIntegrations: [
        {
          azureMonitorWorkspaceResourceId: r_azure_monitor_workspace.id
        }
      ]
    }
  }
}

resource r_mgd_grafana_diag 'Microsoft.Insights/diagnosticSettings@2021-05-01-preview' = {
  name: 'service'
  scope: r_mgd_grafana
  properties: {
    workspaceId: logAnalyticsPayGWorkspaceId
    logs: [
      {
        category: 'GrafanaLoginEvents'
        enabled: true
      }
    ]
    metrics: [
      {
        enabled: true
        category: 'AllMetrics'
      }
    ]
  }
}

// OUTPUTS
output module_metadata object = module_metadata
